<?xml version="1.0" encoding="UTF-8"?>
<xml>
	<config>
		<serviceUrl>@SERVICE_URL@</serviceUrl>
		<partnerId>-2</partnerId>
		<clientTag>Stand alone php 1.0.0</clientTag>
		<curlTimeout>120</curlTimeout>
		<userAgent>Stand alone php 1.0.0</userAgent>
		<verifySSL objectType="bool">0</verifySSL>
	</config>
	<session>
		<partnerId>-2</partnerId>
		<secret>@ADMIN_CONSOLE_PARTNER_ADMIN_SECRET@</secret>
		<userId></userId>
		<sessionType>2</sessionType>
		<expiry>86400</expiry>
		<privileges></privileges> 
	</session>
	
	
	<multirequest>
		<!-- New Item Pending Moderation (Emailing to BMC Moderators) -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>New Item Pending Moderation (Emailing to BMC Moderators)</name>
				<systemName>New_Item_Pending_Moderation_Bmc_Moderators</systemName>
				<description>Email notification template to be sent when a new item is pending to be moderated by a BMC moderator.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>1</eventObjectType> <!-- EventNotificationEventObjectType::ENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof entry &amp;&amp; in_array(entryPeer::MODERATION_STATUS, $scope->getEvent()->getModifiedColumns()) &amp;&amp; $scope->getObject()->getModerationStatus() == entry::ENTRY_MODERATION_STATUS_PENDING_MODERATION</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[Borhan] - New Item Pending Moderation</subject>
				<body>A new item is pending your approval in the Borhan Management Console</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<bcc objectType="BorhanEmailNotificationUserRecipientProvider">
					<filter objectType="BorhanUserFilter">
						<permissionNamesMultiLikeAnd>CONTENT_MODERATE_APPROVE_REJECT,CONTENT_MODERATE_BASE</permissionNamesMultiLikeAnd>
					</filter>
				</bcc>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getId())) ? entryPeer::retrieveByPk($scope->getObject()->getId())->getName() : ''</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	
	<multirequest>
		<!-- New Item Flagged For Moderation (Emailing to BMC Moderators) -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>New Item Flagged For Moderation (Emailing to BMC Moderators)</name>
				<systemName>New_Item_Flagged_For_Moderation_Bmc_Moderators</systemName>
				<description>Email notification template to be sent when an item is flagged for moderation.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>1</eventObjectType> <!-- EventNotificationEventObjectType::ENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof entry &amp;&amp; in_array(entryPeer::MODERATION_STATUS, $scope->getEvent()->getModifiedColumns()) &amp;&amp; $scope->getObject()->getModerationStatus() == entry::ENTRY_MODERATION_STATUS_FLAGGED_FOR_REVIEW</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[Borhan] - New Item Flagged For Review</subject>
				<body>A new item is flagged for review in the Borhan Management Console</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<bcc objectType="BorhanEmailNotificationUserRecipientProvider">
					<filter objectType="BorhanUserFilter">
						<permissionNamesMultiLikeAnd>CONTENT_MODERATE_APPROVE_REJECT,CONTENT_MODERATE_BASE</permissionNamesMultiLikeAnd>
					</filter>
				</bcc>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getId())) ? entryPeer::retrieveByPk($scope->getObject()->getId())->getName() : ''</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	<multirequest>
		<!-- New Item Pending Moderation -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>New Item Pending Moderation</name>
				<systemName>New_Item_Pending_Moderation</systemName>
				<description>Email notification template to be sent when a new item is pending moderation in a specific category (channel).</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>5</eventType> <!-- EventNotificationEventType::OBJECT_CREATED -->
				<eventObjectType>37</eventObjectType> <!-- EventNotificationEventObjectType::CATEGORYENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof categoryEntry &amp;&amp; $scope->getObject()->getStatus() == CategoryEntryStatus::PENDING</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[AppTitle] - New Item Pending Moderation</subject>
				<body>A new item is pending your approval: [ChannelSettingsPendingURLPrefix]{category_name_encoded}/{category_id}[ChannelSettingsPendingURLSuffix]</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<bcc objectType="BorhanEmailNotificationCategoryRecipientProvider">
					<categoryId objectType="BorhanEvalStringField">
						<code>$scope->getObject()->getCategoryId()</code>
					</categoryId>
					<categoryUserFilter objectType="BorhanCategoryUserProviderFilter">
						<permissionNamesMatchOr>CATEGORY_MODERATE</permissionNamesMatchOr>
					</categoryUserFilter>
				</bcc>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_id</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getCategoryId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())) ? categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_name_encoded</key>
						<value objectType="BorhanEvalStringField">
							<code>urlencode(!is_null(categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())) ? categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())->getName() : '')</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	
	<multirequest>
		<!-- New Item Pending Moderation -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>New Item Pending Moderation</name>
				<systemName>New_Item_Pending_Moderation_2</systemName>
				<description>Email notification template to be sent when a new item is pending moderation in a specific category (channel).</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>37</eventObjectType> <!-- EventNotificationEventObjectType::CATEGORYENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof categoryEntry &amp;&amp; in_array(categoryEntryPeer::STATUS, $scope->getEvent()->getModifiedColumns()) &amp;&amp; $scope->getObject()->getStatus() == CategoryEntryStatus::PENDING</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[AppTitle] - New Item Pending Moderation</subject>
				<body>A new item is pending your approval: [ChannelSettingsPendingURLPrefix]{category_name_encoded}/{category_id}[ChannelSettingsPendingURLSuffix]</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<bcc objectType="BorhanEmailNotificationCategoryRecipientProvider">
					<categoryId objectType="BorhanEvalStringField">
						<code>$scope->getObject()->getCategoryId()</code>
					</categoryId>
					<categoryUserFilter objectType="BorhanCategoryUserProviderFilter">
						<permissionNamesMatchOr>CATEGORY_MODERATE</permissionNamesMatchOr>
					</categoryUserFilter>
				</bcc>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_id</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getCategoryId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())) ? categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_name_encoded</key>
						<value objectType="BorhanEvalStringField">
							<code>urlencode(!is_null(categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())) ? categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())->getName() : '')</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	
	<multirequest>
		<!-- Entry Approved In Category -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>Entry Approved In Category</name>
				<systemName>Entry_Approved_In_Category</systemName>
				<description>Email notification template to be sent when a new entry is approved in a category.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>37</eventObjectType> <!-- EventNotificationEventObjectType::CATEGORYENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof categoryEntry &amp;&amp; in_array(categoryEntryPeer::STATUS, $scope->getEvent()->getModifiedColumns()) &amp;&amp; $scope->getObject()->getStatus() == CategoryEntryStatus::ACTIVE</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[AppTitle] - Your Media has been approved</subject>
				<body>Your media {entry_name} [AppEntryUrl]{entry_id} has been approved to be published in {category_name}</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<to objectType="BorhanEmailNotificationStaticRecipientProvider">
					<emailRecipients objectType="array">
						<item objectType = "BorhanEmailNotificationRecipient">
							<email objectType="BorhanEvalStringField">
								<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? (!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()->getEmail() : '') : ''</code>
							</email>
							<name objectType="BorhanEvalStringField">
								<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? (!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()->getFirstName().' '.entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()->getLastName() : '') : ''</code>
							</name>
						</item>
					</emailRecipients>
				</to>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())) ? categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getEntryId()</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	
	
	<multirequest>
		<!-- Entry Rejected In Category -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>Entry Rejected In Category</name>
				<systemName>Entry_Rejected_In_Category</systemName>
				<description>Email notification template to be sent when a new entry is rejected in a category.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>37</eventObjectType> <!-- EventNotificationEventObjectType::CATEGORYENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof categoryEntry &amp;&amp; in_array(categoryEntryPeer::STATUS, $scope->getEvent()->getModifiedColumns()) &amp;&amp; $scope->getObject()->getStatus() == CategoryEntryStatus::REJECTED</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[AppTitle] - Your Media has been rejected</subject>
				<body>Your media {entry_name} [AppEntryUrl]{entry_id} has been rejected to be published in {category_name}</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<to objectType="BorhanEmailNotificationStaticRecipientProvider">
					<emailRecipients objectType="array">
						<item objectType = "BorhanEmailNotificationRecipient">
							<email objectType="BorhanEvalStringField">
								<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? (!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()->getEmail() : '') : ''</code>
							</email>
							<name objectType="BorhanEvalStringField">
								<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? (!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()->getFirstName().' '.entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()->getLastName() : '') : ''</code>
							</name>
						</item>
					</emailRecipients>
				</to>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())) ? categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getEntryId()</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	
	
	<multirequest>
		<!-- Entry Rejected -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>Entry Rejected</name>
				<systemName>Entry_Rejected</systemName>
				<description>Email notification template to be sent when a new entry is rejected.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>1</eventObjectType> <!-- EventNotificationEventObjectType::ENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof entry &amp;&amp; in_array(entryPeer::MODERATION_STATUS, $scope->getEvent()->getModifiedColumns()) &amp;&amp; $scope->getObject()->getModerationStatus() == entry::ENTRY_MODERATION_STATUS_REJECTED</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[AppTitle] - Your Media has been rejected</subject>
				<body>Your media {entry_name} has been rejected</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<to objectType="BorhanEmailNotificationStaticRecipientProvider">
					<emailRecipients objectType="array">
						<item objectType = "BorhanEmailNotificationRecipient">
							<email objectType="BorhanEvalStringField">
								<code>!is_null($scope->getObject()->getkuser()) ? $scope->getObject()->getkuser()->getEmail() : ''</code>
							</email>
							<name objectType="BorhanEvalStringField">
								<code>!is_null($scope->getObject()->getkuser()) ? $scope->getObject()->getkuser()->getFirstName().' '.$scope->getObject()->getkuser()->getLastName() : ''</code>
							</name>
						</item>
					</emailRecipients>
				</to>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getName()</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	
	
	
	<multirequest>
		<!-- Entry Approved -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>Entry Approved</name>
				<systemName>Entry_Approved</systemName>
				<description>Email notification template to be sent when a new entry is approved.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>1</eventObjectType> <!-- EventNotificationEventObjectType::ENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof entry &amp;&amp; in_array(entryPeer::MODERATION_STATUS, $scope->getEvent()->getModifiedColumns()) &amp;&amp; $scope->getObject()->getModerationStatus() == entry::ENTRY_MODERATION_STATUS_APPROVED</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[AppTitle] - Your Media has been approved</subject>
				<body>Your media {entry_name} has been approved</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<to objectType="BorhanEmailNotificationStaticRecipientProvider">
					<emailRecipients objectType="array">
						<item objectType = "BorhanEmailNotificationRecipient">
							<email objectType="BorhanEvalStringField">
								<code>!is_null($scope->getObject()->getkuser()) ? $scope->getObject()->getkuser()->getEmail() : ''</code>
							</email>
							<name objectType="BorhanEvalStringField">
								<code>!is_null($scope->getObject()->getkuser()) ? $scope->getObject()->getkuser()->getFirstName().' '.$scope->getObject()->getkuser()->getLastName() : ''</code>
							</name>
						</item>
					</emailRecipients>
				</to>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getName()</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	
	
	
	<multirequest>
		<!-- Entry Ready -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>Entry Ready</name>
				<systemName>Entry_Ready</systemName>
				<description>Email notification template to be sent when a new entry is ready.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>1</eventObjectType> <!-- EventNotificationEventObjectType::ENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof entry &amp;&amp; in_array(entryPeer::STATUS, $scope->getEvent()->getModifiedColumns()) &amp;&amp; $scope->getObject()->getStatus() == entryStatus::READY</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[AppTitle] - Your video is ready to be played</subject>
				<body>Your recently uploaded media: {entry_name} is ready to play: [AppEntryUrl]{entry_id}</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<to objectType="BorhanEmailNotificationStaticRecipientProvider">
					<emailRecipients objectType="array">
						<item objectType = "BorhanEmailNotificationRecipient">
							<email objectType="BorhanEvalStringField">
								<code>!is_null($scope->getObject()->getkuser()) ? $scope->getObject()->getkuser()->getEmail() : ''</code>
							</email>
							<name objectType="BorhanEvalStringField">
								<code>!is_null($scope->getObject()->getkuser()) ? $scope->getObject()->getkuser()->getFirstName().' '.$scope->getObject()->getkuser()->getLastName() : ''</code>
							</name>
						</item>
					</emailRecipients>
				</to>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<value objectType="BorhanEvalStringField">
							<code>(($scope->getObject() instanceof entry) &amp;&amp; ($scope->getObject()->getIsTemporary()) &amp;&amp; ($scope->getObject()->getReplacedEntryId()))? entryPeer::retrieveByPK($scope->getObject()->getReplacedEntryId())->getName():$scope->getObject()->getName()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<value objectType="BorhanEvalStringField">
							<code>(($scope->getObject() instanceof entry) &amp;&amp; ($scope->getObject()->getIsTemporary()) &amp;&amp; ($scope->getObject()->getReplacedEntryId()))? $scope->getObject()->getReplacedEntryId():$scope->getObject()->getId()</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	
	
	
	<multirequest>
		<!-- User was added to category as [role] -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>User was added to category as [role]</name>
				<systemName>User_Added_To_Category_As_Role</systemName>
				<description>Email notification template to be sent when a used is added to a category with a specific role.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>2</eventType> <!-- EventNotificationEventType::OBJECT_ADDED -->
				<eventObjectType>12</eventObjectType> <!-- EventNotificationEventObjectType::CATEGORYKUSER -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof categoryKuser &amp;&amp; $scope->getObject()->getStatus() == CategoryKuserStatus::ACTIVE</code>
						</field>
					</item>
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof categoryKuser &amp;&amp; category::getPermissionLevelName($scope->getObject()->getPermissionLevel())</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[AppTitle] - You have been added to {category_name}</subject>
				<body>You have been added as {role} to {category_name}</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<to objectType="BorhanEmailNotificationStaticRecipientProvider">
					<emailRecipients objectType="array">
						<item objectType = "BorhanEmailNotificationRecipient">
							<email objectType="BorhanEvalStringField">
								<code>!is_null($scope->getObject()->getkuser()) ? $scope->getObject()->getkuser()->getEmail() : ''</code>
							</email>
							<name objectType="BorhanEvalStringField">
								<code>!is_null($scope->getObject()->getkuser()) ? $scope->getObject()->getkuser()->getFirstName().' '.$scope->getObject()->getkuser()->getLastName() : ''</code>
							</name>
						</item>
					</emailRecipients>
				</to>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_name</key>
						<value objectType="BorhanEvalStringField">
							<code>($scope->getObject()->getcategory()) ? $scope->getObject()->getcategory()->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>role</key>
						<value objectType="BorhanEvalStringField">
							<code>ucfirst(strtolower(category::getPermissionLevelName($scope->getObject()->getPermissionLevel())))</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	
	
	
	<multirequest>
		<!-- User's role was changed in category -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>User's role was changed in category</name>
				<systemName>User_Role_Was_Changed_In_Category</systemName>
				<description>Email notification template to be sent when user's role is changed in category.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>12</eventObjectType> <!-- EventNotificationEventObjectType::CATEGORYKUSER -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof categoryKuser &amp;&amp; in_array(categoryKuserPeer::PERMISSION_LEVEL, $scope->getEvent()->getModifiedColumns()) &amp;&amp; $scope->getObject()->getStatus() == CategoryKuserStatus::ACTIVE</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[AppTitle] - Your {category_name} role has changed</subject>
				<body>Your role in {category_name} has changed and is now {role}</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<to objectType="BorhanEmailNotificationStaticRecipientProvider">
					<emailRecipients objectType="array">
						<item objectType = "BorhanEmailNotificationRecipient">
							<email objectType="BorhanEvalStringField">
								<code>!is_null($scope->getObject()->getkuser()) ? $scope->getObject()->getkuser()->getEmail() : ''</code>
							</email>
							<name objectType="BorhanEvalStringField">
								<code>!is_null($scope->getObject()->getkuser()) ? $scope->getObject()->getkuser()->getFirstName().' '.$scope->getObject()->getkuser()->getLastName() : ''</code>
							</name>
						</item>
					</emailRecipients>
				</to>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_name</key>
						<value objectType="BorhanEvalStringField">
							<code>($scope->getObject()->getcategory()) ? $scope->getObject()->getcategory()->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>role</key>
						<value objectType="BorhanEvalStringField">
							<code>ucfirst(strtolower(category::getPermissionLevelName($scope->getObject()->getPermissionLevel())))</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	
	
	
	<multirequest>
		<!-- User was removed from category -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>User was removed from category</name>
				<systemName>User_Was_Removed_From_Category</systemName>
				<description>Email notification template to be sent when user was removed from category.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>8</eventType> <!-- EventNotificationEventType::OBJECT_DELETED -->
				<eventObjectType>12</eventObjectType> <!-- EventNotificationEventObjectType::CATEGORYKUSER -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof categoryKuser</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[AppTitle] - You have been removed from {category_name}</subject>
				<body>You have been removed from {category_name}</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<to objectType="BorhanEmailNotificationStaticRecipientProvider">
					<emailRecipients objectType="array">
						<item objectType = "BorhanEmailNotificationRecipient">
							<email objectType="BorhanEvalStringField">
								<code>!is_null($scope->getObject()->getkuser()) ? $scope->getObject()->getkuser()->getEmail() : ''</code>
							</email>
							<name objectType="BorhanEvalStringField">
								<code>!is_null($scope->getObject()->getkuser()) ? $scope->getObject()->getkuser()->getFirstName().' '.$scope->getObject()->getkuser()->getLastName() : ''</code>
							</name>
						</item>
					</emailRecipients>
				</to>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_name</key>
						<value objectType="BorhanEvalStringField">
							<code>($scope->getObject()->getcategory()) ? $scope->getObject()->getcategory()->getName() : ''</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	
	
	
	<multirequest>
		<!-- Entry was added to channel -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>Entry was added to channel</name>
				<systemName>Entry_Was_Added_To_Channel</systemName>
				<description>Email notification template to be sent when entry is added to channel.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>5</eventType> <!-- EventNotificationEventType::OBJECT_CREATED -->
				<eventObjectType>37</eventObjectType> <!-- EventNotificationEventObjectType::CATEGORYENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof categoryEntry &amp;&amp; $scope->getObject()->getStatus() == CategoryEntryStatus::ACTIVE</code>
						</field>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[AppTitle] - A new media was added to {category_name}</subject>
				<body>Media {entry_name} was added to {category_name}. You can see the media here: [AppEntryUrl]{entry_id}</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<bcc objectType="BorhanEmailNotificationCategoryRecipientProvider">
					<categoryId objectType="BorhanEvalStringField">
						<code>$scope->getObject()->getCategoryId()</code>
					</categoryId>
					<categoryUserFilter objectType="BorhanCategoryUserProviderFilter">
						<permissionNamesMatchOr>CATEGORY_SUBSCRIBE</permissionNamesMatchOr>
					</categoryUserFilter>
				</bcc>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())) ? categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getEntryId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getName() : ''</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	
	
	
	
	
	<multirequest>
		<!-- Comment was added to entry -->
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanEmailNotificationTemplate">
				<name>Comment was added to entry</name>
				<systemName>Comment_Was_Added_To_Entry</systemName>
				<description>Email notification template to be sent to entry creator when a comment is added to his entry.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>5</eventType> <!-- EventNotificationEventType::OBJECT_CREATED -->
				<eventObjectType>annotationEventNotifications.Annotation</eventObjectType> <!-- EventNotificationEventObjectType::CATEGORYENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<description>An annotation object was created</description>
						<field objectType="BorhanEvalBooleanField">
							<code>$scope->getObject() instanceof Annotation</code>
						</field>
					</item>
					<item objectType="BorhanOrCondition">
						<description>Annotation tags contains at least one of the comment tags</description>
						<conditions objectType="array">
							<item objectType="BorhanEventFieldCondition">
								<field objectType="BorhanEvalBooleanField">
									<code>(strpos($scope->getObject()->getTags(),"KMS_public_comment") !== false)</code>
								</field>
							</item>
							<item objectType="BorhanEventFieldCondition">
								<field objectType="BorhanEvalBooleanField">
									<code>(strpos($scope->getObject()->getTags(),"KMS_comment_context_") !== false)</code>
								</field>
							</item>
						</conditions>
					</item>
				</eventConditions>
				<format>1</format>
				<subject>[AppTitle] - A new comment was added to your video {entry_name}</subject>
				<body>A new comment was added to your video {entry_name}.Comment: {comment_text}. You can access the video page here: [AppEntryUrl]{entry_id}</body>
				<fromEmail>{from_email}</fromEmail>
				<fromName>{from_name}</fromName>
				<to objectType="BorhanEmailNotificationStaticRecipientProvider">
					<emailRecipients objectType="array">
						<item objectType = "BorhanEmailNotificationRecipient">
							<email objectType="BorhanEvalStringField">
								<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? (!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()->getEmail() : '') : ''</code>
							</email>
							<name objectType="BorhanEvalStringField">
								<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? (!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()->getFirstName().' '.entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getkuser()->getLastName() : '') : ''</code>
							</name>
						</item>
					</emailRecipients>
				</to>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>from_email</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_email")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>from_name</key>
						<value objectType="BorhanEvalStringField">
							<code>kConf::get("partner_notification_name")</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getEntryId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>comment_text</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getText()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>comment_id</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>comment_parent_id</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getParentId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>comment_system_name</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getSystemName()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>comment_user_id</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getPuserId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>comment_created_at</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getCreatedAt()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>comment_updated_at</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getUpdatedAt()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>comment_partner_data</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getPartnerData()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>comment_start_time</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getStartTime()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>comment_end_time</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getEndTime()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>comment_duration</key>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getDuration()</code>
						</value>
					</item>
				</contentParameters>
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
	<multirequest>
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanHttpNotificationTemplate">
				<name>Entry Status Changed</name>
				<systemName>HTTP_ENTRY_STATUS_CHANGED</systemName>
				<description>HTTP notification template to be sent when an entry status changed.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>1</eventObjectType> <!-- EventNotificationEventObjectType::ENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<description>Status field modified</description>
						<field objectType="BorhanEvalBooleanField">
							<code>in_array(entryPeer::STATUS, $scope->getEvent()->getModifiedColumns())</code>
						</field>
					</item>
				</eventConditions>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<description>Entry ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<description>Entry name</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getName()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_status</key>
						<description>Entry status</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getStatus()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_reference_id</key>
						<description>Entry reference ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getReferenceID()</code>
						</value>
					</item>
				</contentParameters>
				
				<method>2</method> <!-- BorhanHttpNotificationMethod::POST -->
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>

	<multirequest>
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanHttpNotificationTemplate">
				<name>Entry Status Equals</name>
				<systemName>HTTP_ENTRY_STATUS_EQUALS</systemName>
				<description>HTTP notification template to be sent when an entry status changed to specific value.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>1</eventObjectType> <!-- EventNotificationEventObjectType::ENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<description>Status field modified</description>
						<field objectType="BorhanEvalBooleanField">
							<code>in_array(entryPeer::STATUS, $scope->getEvent()->getModifiedColumns())</code>
						</field>
					</item>
					<item objectType="BorhanFieldMatchCondition">
						<description>Status equals</description>
						<field objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getStatus()</code>
						</field>
						<values objectType="array">
							<item objectType="BorhanStringValue">
								<value>{trigger_status}</value>
							</item>
						</values>
					</item>
				</eventConditions>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<description>Entry ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<description>Entry name</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getName()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_status</key>
						<description>Entry status</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getStatus()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_reference_id</key>
						<description>Entry reference ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getReferenceID()</code>
						</value>
					</item>
				</contentParameters>
				<userParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>trigger_status</key>
						<description>Entry status that triggers the event, See:BorhanEntryStatus:/api_v3/testmeDoc/?object=BorhanEntryStatus</description>
						<value objectType="BorhanStringValue">
							<value>2</value>
						</value>
					</item>
				</userParameters>
				
				<method>2</method> <!-- BorhanHttpNotificationMethod::POST -->
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>

	<multirequest>
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanHttpNotificationTemplate">
				<name>Entry Changed</name>
				<systemName>HTTP_ENTRY_CHANGED</systemName>
				<description>HTTP notification template to be sent when an entry metadata changed.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>1</eventObjectType> <!-- EventNotificationEventObjectType::ENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventObjectChangedCondition">
						<description>Entry metadata changed, columns defined in modified_columns parameter</description>
						<modifiedColumns>{modified_columns}</modifiedColumns>
					</item>
				</eventConditions>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<description>Entry ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<description>Entry name</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getName()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_status</key>
						<description>Entry status</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getStatus()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_reference_id</key>
						<description>Entry reference ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getReferenceID()</code>
						</value>
					</item>
				</contentParameters>
				<userParameters objectType="array">
					<item objectType="BorhanEventNotificationArrayParameter">
						<key>modified_columns</key>
						<description>Entry metadata columns that will trigger the event</description>
						<allowedValues objectType="array">
							<item objectType="BorhanStringValue">
								<value>entry.NAME</value>
								<description>name</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.DATA</value>
								<description>content</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.THUMBNAIL</value>
								<description>thumbnail</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.RANK</value>
								<description>rank</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.TAGS</value>
								<description>tags</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.STATUS</value>
								<description>status</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.LENGTH_IN_MSECS</value>
								<description>duration</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.PARTNER_DATA</value>
								<description>partner data</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.DESCRIPTION</value>
								<description>description</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.MODERATION_STATUS</value>
								<description>moderation status</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.PUSER_ID</value>
								<description>owner id</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.ACCESS_CONTROL_ID</value>
								<description>access control profile id</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.START_DATE</value>
								<description>start date</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.END_DATE</value>
								<description>end date</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entry.FLAVOR_PARAMS_IDS</value>
								<description>flavor params ids</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>referenceID</value>
								<description>reference id</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>partnerSortValue</value>
								<description>partner sort value</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>replacementStatus</value>
								<description>replacement status</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>replacingEntryId</value>
								<description>replacing entry id</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entitledUserPuserEdit</value>
								<description>entitled users - edit</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>entitledUserPuserPublish</value>
								<description>entitled users - publish</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>width</value>
								<description>width</description>
							</item>
							<item objectType="BorhanStringValue">
								<value>height</value>
								<description>height</description>
							</item>
						</allowedValues>
					</item>
				</userParameters>
				
				<method>2</method> <!-- BorhanHttpNotificationMethod::POST -->
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>

	<multirequest>
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanHttpNotificationTemplate">
				<name>Metadata Field Changed</name>
				<systemName>HTTP_METADATA_FIELD_CHANGED</systemName>
				<description>HTTP notification template to be sent when a custom metadata field changed.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>6</eventType> <!-- EventNotificationEventType::OBJECT_DATA_CHANGED -->
				<eventObjectType>metadataEventNotifications.Metadata</eventObjectType> <!-- EventNotificationEventObjectType::METADATA -->
				<eventConditions objectType="array">
					<item objectType="BorhanMetadataFieldChangedCondition">
						<description>Metadata field changed</description>
						<xPath>{metadata_field}</xPath>
						<profileSystemName>{metadata_profile_system_name}</profileSystemName>
						<versionA>{metadata_old_version}</versionA>
						<versionB>{metadata_version}</versionB>
					</item>
				</eventConditions>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>metadata_id</key>
						<description>Metadata ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>metadata_version</key>
						<description>Metadata version</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getVersion()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>metadata_old_version</key>
						<description>Metadata previous version</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getEvent()->getPreviousVersion()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>object_id</key>
						<description>Object ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getObjectId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>object_type</key>
						<description>Object type</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getObjectType()</code>
						</value>
					</item>
				</contentParameters>
				<userParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>metadata_field</key>
						<description>Custom metadata field to be compared</description>
						<value objectType="BorhanStringValue">
							<value></value>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>metadata_profile_system_name</key>
						<description>Custom metadata profile system name to be compared</description>
						<value objectType="BorhanStringValue">
							<value></value>
						</value>
					</item>
				</userParameters>
				
				<method>2</method> <!-- BorhanHttpNotificationMethod::POST -->
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>

	<multirequest>
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanHttpNotificationTemplate">
				<name>Metadata Field Equals</name>
				<systemName>HTTP_METADATA_FIELD_EQUALS</systemName>
				<description>HTTP notification template to be sent when a custom metadata field changed to specific value.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>6</eventType> <!-- EventNotificationEventType::OBJECT_DATA_CHANGED -->
				<eventObjectType>metadataEventNotifications.Metadata</eventObjectType> <!-- EventNotificationEventObjectType::METADATA -->
				<eventConditions objectType="array">
					<item objectType="BorhanMetadataFieldChangedCondition">
						<description>Metadata field changed</description>
						<xPath>{metadata_field}</xPath>
						<profileSystemName>{metadata_profile_system_name}</profileSystemName>
						<versionA>{metadata_old_version}</versionA>
						<versionB>{metadata_version}</versionB>
					</item>
					<item objectType="BorhanMatchMetadataCondition">
						<description>Metadata field equals</description>
						<xPath>{metadata_field}</xPath>
						<profileSystemName>{metadata_profile_system_name}</profileSystemName>
						<values objectType="array">
							<item objectType="BorhanStringValue">
								<value>{metadata_value}</value>
							</item>
						</values>
					</item>
				</eventConditions>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>metadata_id</key>
						<description>Metadata ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>metadata_version</key>
						<description>Metadata version</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getVersion()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>metadata_old_version</key>
						<description>Metadata previous version</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getEvent()->getPreviousVersion()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>object_id</key>
						<description>Object ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getObjectId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>object_type</key>
						<description>Object type</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getObjectType()</code>
						</value>
					</item>
				</contentParameters>
				<userParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>metadata_field</key>
						<description>Custom metadata field to be compared</description>
						<value objectType="BorhanStringValue">
							<value></value>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>metadata_profile_system_name</key>
						<description>Custom metadata profile system name to be compared</description>
						<value objectType="BorhanStringValue">
							<value></value>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>metadata_value</key>
						<description>Custom metadata field value that triggers the event</description>
						<value objectType="BorhanStringValue">
							<value></value>
						</value>
					</item>
				</userParameters>
				
				<method>2</method> <!-- BorhanHttpNotificationMethod::POST -->
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>

	<multirequest>
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanHttpNotificationTemplate">
				<name>Entry-Distribution Created</name>
				<systemName>HTTP_ENTRY_DISTRIBUTION_CREATED</systemName>
				<description>HTTP notification template to be sent when a entry-distribution object created.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>5</eventType> <!-- EventNotificationEventType::OBJECT_CREATED -->
				<eventObjectType>contentDistributionEventNotifications.EntryDistribution</eventObjectType> <!-- EventNotificationEventObjectType::ENTRY_DISTRIBUTION -->
				<eventConditions objectType="array">
					<item objectType="BorhanOrCondition">
						<description>Distribution profile ID equals or *</description>
						<conditions objectType="array">
							<item objectType="BorhanFieldMatchCondition">
								<description>Distribution profile ID equals</description>
								<field objectType="BorhanEvalStringField">
									<code>$scope->getObject()->getDistributionProfileId()</code>
								</field>
								<values objectType="array">
									<item objectType="BorhanStringValue">
										<value>{trigger_distribution_profile_id}</value>
									</item>
								</values>
							</item>
							<item objectType="BorhanFieldMatchCondition">
								<description>All distribution profiles</description>
								<field objectType="BorhanEvalStringField">
									<code>'*'</code>
								</field>
								<values objectType="array">
									<item objectType="BorhanStringValue">
										<value>{trigger_distribution_profile_id}</value>
									</item>
								</values>
							</item>
						</conditions>
					</item>
				</eventConditions>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_distribution_id</key>
						<description>Entry-Distribution ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<description>Entry ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getEntryId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>distribution_profile_id</key>
						<description>Distribution profile ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getDistributionProfileId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_distribution_status</key>
						<description>Entry-Distribution status</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getStatus()</code>
						</value>
					</item>
				</contentParameters>
				<userParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>trigger_distribution_profile_id</key>
						<description>Distribution profile ID that triggers the event (use asterisk to all profiles)</description>
						<value objectType="BorhanStringValue">
							<value>*</value>
						</value>
					</item>
				</userParameters>	
				<method>2</method> <!-- BorhanHttpNotificationMethod::POST -->
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>

	<multirequest>
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanHttpNotificationTemplate">
				<name>Entry-Distribution Status Changed</name>
				<systemName>HTTP_ENTRY_DISTRIBUTION_STATUS_CHANGED</systemName>
				<description>HTTP notification template to be sent when a entry-distribution object status field changed.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>contentDistributionEventNotifications.EntryDistribution</eventObjectType> <!-- EventNotificationEventObjectType::ENTRY_DISTRIBUTION -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<description>Status field modified</description>
						<field objectType="BorhanEvalBooleanField">
							<code>in_array(EntryDistributionPeer::STATUS, $scope->getEvent()->getModifiedColumns())</code>
						</field>
					</item>
					<item objectType="BorhanOrCondition">
						<description>Distribution profile ID equals or *</description>
						<conditions objectType="array">
							<item objectType="BorhanFieldMatchCondition">
								<description>Distribution profile ID equals</description>
								<field objectType="BorhanEvalStringField">
									<code>$scope->getObject()->getDistributionProfileId()</code>
								</field>
								<values objectType="array">
									<item objectType="BorhanStringValue">
										<value>{trigger_distribution_profile_id}</value>
									</item>
								</values>
							</item>
							<item objectType="BorhanFieldMatchCondition">
								<description>All distribution profiles</description>
								<field objectType="BorhanEvalStringField">
									<code>'*'</code>
								</field>
								<values objectType="array">
									<item objectType="BorhanStringValue">
										<value>{trigger_distribution_profile_id}</value>
									</item>
								</values>
							</item>
						</conditions>
					</item>
				</eventConditions>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_distribution_id</key>
						<description>Entry-Distribution ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<description>Entry ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getEntryId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>distribution_profile_id</key>
						<description>Distribution profile ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getDistributionProfileId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_distribution_status</key>
						<description>Entry-Distribution status</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getStatus()</code>
						</value>
					</item>
				</contentParameters>
				<userParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>trigger_distribution_profile_id</key>
						<description>Distribution profile ID that triggers the event (use asterisk to all profiles)</description>
						<value objectType="BorhanStringValue">
							<value>*</value>
						</value>
					</item>
				</userParameters>	
				<method>2</method> <!-- BorhanHttpNotificationMethod::POST -->
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>

	<multirequest>
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanHttpNotificationTemplate">
				<name>Entry Added to Category</name>
				<systemName>HTTP_ENTRY_ADDED_TO_CATEGORY</systemName>
				<description>HTTP notification template to be sent when a entry associated with category.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>5</eventType> <!-- EventNotificationEventType::OBJECT_CREATED -->
				<eventObjectType>37</eventObjectType> <!-- EventNotificationEventObjectType::CATEGORYENTRY -->
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<description>Entry ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getEntryId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<description>Entry name</description>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_id</key>
						<description>Category ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getCategoryId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_name</key>
						<description>Category name</description>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())) ? categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())->getName() : ''</code>
						</value>
					</item>
				</contentParameters>
				<method>2</method> <!-- BorhanHttpNotificationMethod::POST -->
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>

	<multirequest>
		<request service="eventNotificationTemplate" action="add" plugin="eventNotification" partnerId="0">
			<template objectType="BorhanHttpNotificationTemplate">
				<name>Entry-Category Status Changed</name>
				<systemName>HTTP_ENTRY_CATEGORY_STATUS_CHANGED</systemName>
				<description>HTTP notification template to be sent when a entry status in category changed.</description>
				<automaticDispatchEnabled>1</automaticDispatchEnabled>
				<eventType>3</eventType> <!-- EventNotificationEventType::OBJECT_CHANGED -->
				<eventObjectType>37</eventObjectType> <!-- EventNotificationEventObjectType::CATEGORYENTRY -->
				<eventConditions objectType="array">
					<item objectType="BorhanEventFieldCondition">
						<description>Status field modified</description>
						<field objectType="BorhanEvalBooleanField">
							<code>in_array(categoryEntryPeer::STATUS, $scope->getEvent()->getModifiedColumns())</code>
						</field>
					</item>
				</eventConditions>
				<contentParameters objectType="array">
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_id</key>
						<description>Entry ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getEntryId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>entry_name</key>
						<description>Entry name</description>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(entryPeer::retrieveByPk($scope->getObject()->getEntryId())) ? entryPeer::retrieveByPk($scope->getObject()->getEntryId())->getName() : ''</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_id</key>
						<description>Category ID</description>
						<value objectType="BorhanEvalStringField">
							<code>$scope->getObject()->getCategoryId()</code>
						</value>
					</item>
					<item objectType="BorhanEventNotificationParameter">
						<key>category_name</key>
						<description>Category name</description>
						<value objectType="BorhanEvalStringField">
							<code>!is_null(categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())) ? categoryPeer::retrieveByPk($scope->getObject()->getCategoryId())->getName() : ''</code>
						</value>
					</item>
				</contentParameters>
				<method>2</method> <!-- BorhanHttpNotificationMethod::POST -->
			</template>
		</request>
		<request service="eventNotificationTemplate" action="updateStatus" plugin="eventNotification" partnerId="0">
			<id>{1:result:id}</id>
			<status>1</status><!-- EventNotificationTemplateStatus::DISABLED -->
		</request>
	</multirequest>
	
</xml>
